# Generated by Django 4.2 on 2025-06-11 10:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('candidate', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mpr', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Custom title for this interview (auto-generated if empty)', max_length=200)),
                ('scheduled_date', models.DateTimeField(blank=True, help_text='Scheduled date and time for the interview', null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=60, help_text='Planned duration in minutes')),
                ('location', models.CharField(blank=True, help_text='Interview location (office, online, phone, etc.)', max_length=255)),
                ('meeting_link', models.URLField(blank=True, help_text='Video call link for online interviews', null=True)),
                ('meeting_details', models.TextField(blank=True, help_text='Additional meeting instructions or details')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('actual_start_time', models.DateTimeField(blank=True, help_text='When the interview actually started', null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, help_text='When the interview actually ended', null=True)),
                ('overall_score', models.DecimalField(blank=True, decimal_places=1, help_text='Overall score for this interview (0.0 - 5.0)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('strengths', models.TextField(blank=True, help_text="Candidate's strengths observed during the interview")),
                ('weaknesses', models.TextField(blank=True, help_text='Areas for improvement observed during the interview')),
                ('general_feedback', models.TextField(blank=True, help_text='General feedback and notes from the interview')),
                ('recommendation', models.CharField(blank=True, choices=[('strong_hire', 'Strong Hire'), ('hire', 'Hire'), ('maybe', 'Maybe/Borderline'), ('no_hire', 'No Hire'), ('strong_no_hire', 'Strong No Hire')], help_text="Interviewer's hiring recommendation", max_length=20, null=True)),
                ('interviewer_notes', models.TextField(blank=True, help_text='Private notes from the interviewer')),
                ('preparation_notes', models.TextField(blank=True, help_text='Notes for interview preparation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='candidate.candidate')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_interviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'interviews',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='InterviewParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('primary_interviewer', 'Primary Interviewer'), ('secondary_interviewer', 'Secondary Interviewer'), ('observer', 'Observer'), ('technical_interviewer', 'Technical Interviewer'), ('hr_interviewer', 'HR Interviewer'), ('hiring_manager', 'Hiring Manager')], default='primary_interviewer', max_length=30)),
                ('individual_score', models.DecimalField(blank=True, decimal_places=1, help_text="This participant's individual score (0.0 - 5.0)", max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('individual_feedback', models.TextField(blank=True, help_text="This participant's individual feedback")),
                ('individual_recommendation', models.CharField(blank=True, choices=[('strong_hire', 'Strong Hire'), ('hire', 'Hire'), ('maybe', 'Maybe/Borderline'), ('no_hire', 'No Hire'), ('strong_no_hire', 'Strong No Hire')], help_text="This participant's individual recommendation", max_length=20, null=True)),
                ('attended', models.BooleanField(default=True, help_text='Whether this participant actually attended the interview')),
                ('joined_at', models.DateTimeField(blank=True, help_text='When this participant joined the interview', null=True)),
                ('left_at', models.DateTimeField(blank=True, help_text='When this participant left the interview', null=True)),
                ('send_calendar_invite', models.BooleanField(default=True, help_text='Whether to send calendar invite to this participant')),
                ('send_reminders', models.BooleanField(default=True, help_text='Whether to send reminders to this participant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='interview.interview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'interview_participants',
                'ordering': ['role', 'user__first_name'],
                'unique_together': {('interview', 'user')},
            },
        ),
        migrations.CreateModel(
            name='InterviewRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the interview round (e.g., HR Interview, Technical Interview)', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of what this interview round covers')),
                ('typical_duration', models.PositiveIntegerField(default=60, help_text='Typical duration in minutes')),
                ('sequence_order', models.PositiveIntegerField(default=1, help_text='Order in the interview process (1 = first round)')),
                ('is_active', models.BooleanField(default=True)),
                ('max_score', models.DecimalField(decimal_places=1, default=5.0, help_text='Maximum possible score for this round', max_digits=3)),
                ('evaluation_criteria', models.JSONField(blank=True, default=list, help_text="List of criteria to evaluate (e.g., ['Technical Skills', 'Communication', 'Problem Solving'])")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'interview_rounds',
                'ordering': ['sequence_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InterviewReschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_date', models.DateTimeField()),
                ('previous_location', models.CharField(blank=True, max_length=255)),
                ('new_date', models.DateTimeField()),
                ('new_location', models.CharField(blank=True, max_length=255)),
                ('reason', models.CharField(choices=[('candidate_request', 'Candidate Request'), ('interviewer_unavailable', 'Interviewer Unavailable'), ('technical_issues', 'Technical Issues'), ('emergency', 'Emergency'), ('scheduling_conflict', 'Scheduling Conflict'), ('other', 'Other')], default='other', max_length=30)),
                ('reason_details', models.TextField(blank=True, help_text='Additional details about the reschedule reason')),
                ('initiated_by_type', models.CharField(choices=[('candidate', 'Candidate'), ('recruiter', 'Recruiter'), ('interviewer', 'Interviewer'), ('hr', 'HR'), ('system', 'System')], default='recruiter', max_length=20)),
                ('candidate_notified', models.BooleanField(default=False)),
                ('interviewers_notified', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('initiated_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_reschedules', to=settings.AUTH_USER_MODEL)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reschedule_history', to='interview.interview')),
            ],
            options={
                'db_table': 'interview_reschedules',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InterviewQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='The interview question')),
                ('question_type', models.CharField(choices=[('behavioral', 'Behavioral'), ('technical', 'Technical'), ('situational', 'Situational'), ('competency', 'Competency-based'), ('case_study', 'Case Study'), ('general', 'General')], default='general', max_length=30)),
                ('evaluation_criteria', models.JSONField(blank=True, default=list, help_text='Criteria to evaluate when asking this question')),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('estimated_time_minutes', models.PositiveIntegerField(default=5, help_text='Estimated time to answer this question')),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='How many times this question has been used')),
                ('follow_up_questions', models.TextField(blank=True, help_text='Suggested follow-up questions')),
                ('ideal_answer_points', models.TextField(blank=True, help_text='Key points to look for in ideal answers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_interview_questions', to=settings.AUTH_USER_MODEL)),
                ('interview_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard_questions', to='interview.interviewround')),
            ],
            options={
                'db_table': 'interview_questions',
                'ordering': ['interview_round', 'question_type', 'difficulty_level'],
            },
        ),
        migrations.CreateModel(
            name='InterviewCalendarIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_event_id', models.CharField(blank=True, max_length=255, null=True)),
                ('outlook_event_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_synced', models.BooleanField(default=False)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_errors', models.TextField(blank=True, help_text='Any errors encountered during calendar sync')),
                ('calendar_invite_sent', models.BooleanField(default=False)),
                ('reminder_set', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interview', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_integration', to='interview.interview')),
            ],
            options={
                'db_table': 'interview_calendar_integrations',
            },
        ),
        migrations.AddField(
            model_name='interview',
            name='interview_round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='interviews', to='interview.interviewround'),
        ),
        migrations.AddField(
            model_name='interview',
            name='mpr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='mpr.mpr'),
        ),
        migrations.CreateModel(
            name='InterviewQuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_question_text', models.TextField(blank=True, help_text='If asking a custom question not in the question bank')),
                ('candidate_answer', models.TextField(blank=True, help_text="Candidate's response to the question")),
                ('interviewer_notes', models.TextField(blank=True, help_text="Interviewer's notes about the response")),
                ('response_score', models.DecimalField(blank=True, decimal_places=1, help_text='Score for this specific response (0.0 - 5.0)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('time_taken_minutes', models.PositiveIntegerField(blank=True, help_text='Time taken to answer this question', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asked_questions', to='interview.interviewparticipant')),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_responses', to='interview.interview')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='interview.interviewquestion')),
            ],
            options={
                'db_table': 'interview_question_responses',
                'ordering': ['created_at'],
                'unique_together': {('interview', 'question', 'asked_by')},
            },
        ),
        migrations.CreateModel(
            name='InterviewFeedbackTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the feedback template', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of when to use this template')),
                ('sections', models.JSONField(default=list, help_text='List of feedback sections with their fields')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default template for this interview round')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_feedback_templates', to=settings.AUTH_USER_MODEL)),
                ('interview_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_templates', to='interview.interviewround')),
            ],
            options={
                'db_table': 'interview_feedback_templates',
                'ordering': ['interview_round', 'name'],
                'unique_together': {('interview_round', 'name')},
            },
        ),
        migrations.CreateModel(
            name='InterviewCriteriaEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_name', models.CharField(help_text='Name of the criteria being evaluated', max_length=100)),
                ('score', models.DecimalField(decimal_places=1, help_text='Score for this specific criteria (0.0 - 5.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.TextField(blank=True, help_text='Comments specific to this criteria')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, help_text='Weight of this criteria in overall score (0.0 - 1.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria_evaluations', to='interview.interview')),
                ('participant', models.ForeignKey(blank=True, help_text='If null, this is the consolidated evaluation', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='criteria_evaluations', to='interview.interviewparticipant')),
            ],
            options={
                'db_table': 'interview_criteria_evaluations',
                'ordering': ['criteria_name'],
                'unique_together': {('interview', 'participant', 'criteria_name')},
            },
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['candidate', '-scheduled_date'], name='interviews_candida_1bf2e0_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['mpr', '-scheduled_date'], name='interviews_mpr_id_9e0b6f_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['status', 'scheduled_date'], name='interviews_status_644dea_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['interview_round', '-scheduled_date'], name='interviews_intervi_8ef3c6_idx'),
        ),
    ]
