# Generated by Django 5.2.2 on 2025-06-09 08:54

import candidate.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("mpr", "0002_add_organizational_roles"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Candidate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Primary email address for the candidate",
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the candidate", max_length=255
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Phone number", max_length=20, null=True
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Current location (City, State, Country)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "current_position",
                    models.CharField(
                        blank=True,
                        help_text="Current job title/position",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "current_company",
                    models.CharField(
                        blank=True,
                        help_text="Current company name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "experience_years",
                    models.PositiveIntegerField(
                        blank=True, help_text="Total years of experience", null=True
                    ),
                ),
                (
                    "professional_skills",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of professional skills (e.g., Problem Solving, Design System, etc.)",
                    ),
                ),
                (
                    "applied_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the candidate first applied"
                    ),
                ),
                (
                    "hiring_status",
                    models.CharField(
                        choices=[
                            ("applied", "Applied"),
                            ("screening", "Initial Screening"),
                            ("portfolio_review", "Portfolio Review"),
                            ("phone_interview", "Phone Interview"),
                            ("technical_interview", "Technical Interview"),
                            ("final_interview", "Final Interview"),
                            ("reference_check", "Reference Check"),
                            ("offer_pending", "Offer Pending"),
                            ("offer_accepted", "Offer Accepted"),
                            ("offer_declined", "Offer Declined"),
                            ("rejected", "Rejected"),
                            ("on_hold", "On Hold"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        default="applied",
                        help_text="Current status in the hiring process",
                        max_length=20,
                    ),
                ),
                (
                    "hr_interview_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="HR Interview score (0.0 - 5.0)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "portfolio_review_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Portfolio Review score (0.0 - 5.0)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "design_test_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Design Test score (0.0 - 5.0)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "overall_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Overall candidate score (0.0 - 5.0)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "skill_match_percentage",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Percentage of skills matched (0-100)",
                        null=True,
                    ),
                ),
                (
                    "matched_skills_count",
                    models.PositiveIntegerField(
                        blank=True, help_text="Number of skills matched", null=True
                    ),
                ),
                (
                    "total_skills_count",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Total number of required skills",
                        null=True,
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True, help_text="LinkedIn profile URL", null=True
                    ),
                ),
                (
                    "portfolio_url",
                    models.URLField(
                        blank=True, help_text="Portfolio website URL", null=True
                    ),
                ),
                (
                    "salary_expectation",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Expected salary",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "availability_date",
                    models.DateField(
                        blank=True, help_text="Date when candidate can start", null=True
                    ),
                ),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes about the candidate (not visible to candidate)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "candidates",
                "ordering": ["-applied_at"],
                "indexes": [
                    models.Index(fields=["email"], name="candidates_email_32f680_idx"),
                    models.Index(
                        fields=["hiring_status"], name="candidates_hiring__ff6819_idx"
                    ),
                    models.Index(
                        fields=["applied_at"], name="candidates_applied_e63f1d_idx"
                    ),
                    models.Index(
                        fields=["overall_score"], name="candidates_overall_8be02e_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CandidateEmail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=500)),
                ("body", models.TextField()),
                ("from_email", models.EmailField(max_length=254)),
                ("to_email", models.EmailField(max_length=254)),
                (
                    "cc_emails",
                    models.JSONField(
                        blank=True, default=list, help_text="List of CC email addresses"
                    ),
                ),
                (
                    "bcc_emails",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of BCC email addresses",
                    ),
                ),
                (
                    "email_type",
                    models.CharField(
                        choices=[
                            ("application", "Application Email"),
                            ("follow_up", "Follow-up Email"),
                            ("interview_invitation", "Interview Invitation"),
                            ("interview_confirmation", "Interview Confirmation"),
                            ("interview_reminder", "Interview Reminder"),
                            ("feedback_request", "Feedback Request"),
                            ("offer_letter", "Offer Letter"),
                            ("rejection_letter", "Rejection Letter"),
                            ("general", "General Communication"),
                        ],
                        default="general",
                        max_length=50,
                    ),
                ),
                (
                    "is_inbound",
                    models.BooleanField(
                        default=True,
                        help_text="True if email is from candidate to us, False if from us to candidate",
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                (
                    "external_email_id",
                    models.CharField(
                        blank=True,
                        help_text="ID from external email system (Gmail, Outlook, etc.)",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("sent_at", models.DateTimeField()),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emails",
                        to="candidate.candidate",
                    ),
                ),
            ],
            options={
                "db_table": "candidate_emails",
                "ordering": ["-sent_at"],
            },
        ),
        migrations.CreateModel(
            name="CandidateStatusUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "previous_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("applied", "Applied"),
                            ("screening", "Initial Screening"),
                            ("portfolio_review", "Portfolio Review"),
                            ("phone_interview", "Phone Interview"),
                            ("technical_interview", "Technical Interview"),
                            ("final_interview", "Final Interview"),
                            ("reference_check", "Reference Check"),
                            ("offer_pending", "Offer Pending"),
                            ("offer_accepted", "Offer Accepted"),
                            ("offer_declined", "Offer Declined"),
                            ("rejected", "Rejected"),
                            ("on_hold", "On Hold"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("applied", "Applied"),
                            ("screening", "Initial Screening"),
                            ("portfolio_review", "Portfolio Review"),
                            ("phone_interview", "Phone Interview"),
                            ("technical_interview", "Technical Interview"),
                            ("final_interview", "Final Interview"),
                            ("reference_check", "Reference Check"),
                            ("offer_pending", "Offer Pending"),
                            ("offer_accepted", "Offer Accepted"),
                            ("offer_declined", "Offer Declined"),
                            ("rejected", "Rejected"),
                            ("on_hold", "On Hold"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "reason",
                    models.TextField(blank=True, help_text="Reason for status change"),
                ),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_updates",
                        to="candidate.candidate",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="candidate_status_updates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "candidate_status_updates",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("original_file_name", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("cv", "CV/Resume"),
                            ("cover_letter", "Cover Letter"),
                            ("portfolio", "Portfolio"),
                            ("certificate", "Certificate"),
                            ("transcript", "Transcript"),
                            ("photo", "Photo"),
                            ("other", "Other Document"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "file",
                    models.FileField(
                        upload_to=candidate.models.candidate_attachment_upload_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                ]
                            )
                        ],
                    ),
                ),
                (
                    "is_visible_to_line_manager",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this attachment is visible to line managers and others (besides recruiter)",
                    ),
                ),
                (
                    "is_primary_cv",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary CV selected by recruiter",
                    ),
                ),
                (
                    "is_processed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the attachment has been processed (e.g., text extracted)",
                    ),
                ),
                (
                    "extracted_text",
                    models.TextField(
                        blank=True,
                        help_text="Text extracted from the document for searching",
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="candidate.candidate",
                    ),
                ),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="candidate.candidateemail",
                    ),
                ),
            ],
            options={
                "db_table": "candidate_email_attachments",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="CandidateMPR",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "application_stage",
                    models.CharField(
                        choices=[
                            ("applied", "Applied"),
                            ("recruiter_shortlist", "Recruiter Short List"),
                            ("line_manager_shortlist", "Line Manager Short List"),
                            ("selected", "Selected Candidate"),
                            ("rejected", "Rejected"),
                        ],
                        default="applied",
                        max_length=50,
                    ),
                ),
                (
                    "recruiter_notes",
                    models.TextField(
                        blank=True, help_text="Recruiter's notes about this application"
                    ),
                ),
                (
                    "line_manager_notes",
                    models.TextField(
                        blank=True,
                        help_text="Line manager's notes about this application",
                    ),
                ),
                (
                    "technical_fit_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Technical fit score for this specific role (0.0 - 5.0)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "cultural_fit_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Cultural fit score for this specific role (0.0 - 5.0)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mpr_applications",
                        to="candidate.candidate",
                    ),
                ),
                (
                    "mpr",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidate_applications",
                        to="mpr.mpr",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_candidate_mprs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "primary_cv",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary CV attachment for this MPR (visible to line managers)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_cv_for_mprs",
                        to="candidate.emailattachment",
                    ),
                ),
            ],
            options={
                "db_table": "candidate_mpr_applications",
                "ordering": ["-applied_at"],
            },
        ),
        migrations.AddIndex(
            model_name="candidateemail",
            index=models.Index(
                fields=["candidate", "-sent_at"], name="candidate_e_candida_2aa10c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidateemail",
            index=models.Index(
                fields=["email_type"], name="candidate_e_email_t_6523eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidateemail",
            index=models.Index(
                fields=["is_inbound"], name="candidate_e_is_inbo_5ec109_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailattachment",
            index=models.Index(
                fields=["candidate", "-uploaded_at"],
                name="candidate_e_candida_97bb3c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailattachment",
            index=models.Index(
                fields=["file_type"], name="candidate_e_file_ty_860788_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailattachment",
            index=models.Index(
                fields=["is_visible_to_line_manager"],
                name="candidate_e_is_visi_a57a2f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailattachment",
            index=models.Index(
                fields=["is_primary_cv"], name="candidate_e_is_prim_bca016_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="candidatempr",
            index=models.Index(
                fields=["mpr", "application_stage"],
                name="candidate_m_mpr_id_5daf63_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="candidatempr",
            index=models.Index(
                fields=["candidate", "-applied_at"],
                name="candidate_m_candida_0af4df_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="candidatempr",
            unique_together={("candidate", "mpr")},
        ),
    ]
